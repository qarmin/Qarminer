name: 🐧 Godot 3.x Singleton Testing
on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 6'

jobs:
  linux-sanitizer:
    runs-on: "ubuntu-22.04"
    name: Editor and project

    steps:
      - uses: actions/checkout@v3

      # Azure repositories are not reliable, we need to prevent azure giving us packages.
      - name: Make apt sources.list use the default Ubuntu repositories
        run: |
          sudo rm -f /etc/apt/sources.list.d/*
          sudo cp -f misc/ci/sources.list /etc/apt/sources.list
          sudo apt-get update

      # Install all packages (except scons)
      - name: Configure dependencies
        run: |
          sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev \
            libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev yasm \
            xvfb wget2 unzip python3 scons git

      - name: Backup project.godot
        run: |
          cp project.godot project.godot.old

      - name: Download reproducer
        run: |
          wget -nv https://github.com/qarmin/Qarminer/releases/download/reproducer/find_minimal_godot_crash -O reproducer
          chmod +x ./reproducer

      - name: Download Godot(GIT)
        run: |
          git clone https://github.com/godotengine/godot.git
          cd godot
          git checkout 3.x
          cd ../

      - name: Compile Godot
        run: |
          cd godot
          scons -j2 use_asan=yes use_ubsan=yes
          cp bin/godot.x11.tools.64s ../
          cd ../
          rm -rf godot

      - name: Create test project
        run: |
          DRI_PRIME=0 xvfb-run ./godot.x11.tools.64s ManualTesting.tscn --audio-driver Dummy --video-driver GLES2 || true

      - name: Configure Project Data
        run: |
          rm timer.txt || true
          rm memory_usage.txt || true
          rm results.txt || true
          rm crash_reproduce.gd || true
          echo "" > settings.txt
          cp project.godot.old project.godot

      - name: Execute project 1 GLES2
        run: |
          DRI_PRIME=0 xvfb-run ./godot.x11.tools.64s SingletonTesting.tscn 1000 --audio-driver Dummy --video-driver GLES2 --path $(pwd) 2>&1 | tee sanitizers_log.txt || true
          for i in {0..50}; do echo "" >> project_results.txt; done;
          for i in {0..50}; do echo "" >> run_results.txt; done;
          tail -n 300 sanitizers_log.txt >> project_results.txt
          cat results.txt >> run_results.txt

      - name: Run reproducer
        run: |
          echo "extends Node" > temp.txt
          echo "func _process(delta):" >> temp.txt
          if [ -f results.txt ]; then
            cat temp.txt results.txt > Node.gd.test || true
            VK_ICD_FILENAMES=$(pwd)/vk_swiftshader_icd.json UBSAN_OPTIONS=suppressions=suppressions.supp DRI_PRIME=0 timeout -v 3600 ./reproducer godot.x11.tools.64s 60_50 . --video-driver GLES2 --audio-driver Dummy # || echo "ERROR: REPRODUCER FAILURE"
          fi

      - name: Store reproducer
        uses: actions/upload-artifact@v3
        with:
          name: reproducer_3_x_gles2_1
          path: crash_reproduce.gd
          if-no-files-found: ignore

      - name: Configure Project Data
        run: |
          rm timer.txt || true
          rm memory_usage.txt || true
          rm results.txt || true
          rm crash_reproduce.gd || true
          echo "" > settings.txt
          cp project.godot.old project.godot

      - name: Execute project 2 GLES2
        run: |
          DRI_PRIME=0 xvfb-run ./godot.x11.tools.64s SingletonTesting.tscn 1000 --audio-driver Dummy --video-driver GLES2 --path $(pwd) 2>&1 | tee sanitizers_log.txt || true
          for i in {0..50}; do echo "" >> project_results.txt; done;
          for i in {0..50}; do echo "" >> run_results.txt; done;
          tail -n 300 sanitizers_log.txt >> project_results.txt
          cat results.txt >> run_results.txt

      - name: Run reproducer
        run: |
          echo "extends Node" > temp.txt
          echo "func _process(delta):" >> temp.txt
          if [ -f results.txt ]; then
            cat temp.txt results.txt > Node.gd.test || true
            VK_ICD_FILENAMES=$(pwd)/vk_swiftshader_icd.json UBSAN_OPTIONS=suppressions=suppressions.supp DRI_PRIME=0 timeout -v 3600 ./reproducer godot.x11.tools.64s 60_50 . --video-driver GLES2 --audio-driver Dummy # || echo "ERROR: REPRODUCER FAILURE"
          fi

      - name: Store reproducer
        uses: actions/upload-artifact@v3
        with:
          name: reproducer_3_x_gles2_2
          path: crash_reproduce.gd
          if-no-files-found: ignore
          
      - name: Configure Project Data
        run: |
          rm timer.txt || true
          rm memory_usage.txt || true
          rm results.txt || true
          rm crash_reproduce.gd || true
          echo "" > settings.txt
          cp project.godot.old project.godot

      - name: Execute project 3 GLES2
        run: |
          DRI_PRIME=0 xvfb-run ./godot.x11.tools.64s SingletonTesting.tscn 1000 --audio-driver Dummy --video-driver GLES2 --path $(pwd) 2>&1 | tee sanitizers_log.txt || true
          for i in {0..50}; do echo "" >> project_results.txt; done;
          for i in {0..50}; do echo "" >> run_results.txt; done;
          tail -n 300 sanitizers_log.txt >> project_results.txt
          cat results.txt >> run_results.txt

      - name: Run reproducer
        run: |
          echo "extends Node" > temp.txt
          echo "func _process(delta):" >> temp.txt
          if [ -f results.txt ]; then
            cat temp.txt results.txt > Node.gd.test || true
            VK_ICD_FILENAMES=$(pwd)/vk_swiftshader_icd.json UBSAN_OPTIONS=suppressions=suppressions.supp DRI_PRIME=0 timeout -v 3600 ./reproducer godot.x11.tools.64s 60_50 . --video-driver GLES2 --audio-driver Dummy # || echo "ERROR: REPRODUCER FAILURE"
          fi

      - name: Store reproducer
        uses: actions/upload-artifact@v3
        with:
          name: reproducer_3_x_gles2_3
          path: crash_reproduce.gd
          if-no-files-found: ignore

      - name: Configure Project Data
        run: |
          rm timer.txt || true
          rm memory_usage.txt || true
          rm results.txt || true
          rm crash_reproduce.gd || true
          echo "" > settings.txt
          cp project.godot.old project.godot

      - name: Execute project 1 GLES3
        run: |
          DRI_PRIME=0 xvfb-run ./godot.x11.tools.64s SingletonTesting.tscn 1000 --audio-driver Dummy --video-driver GLES3 --path $(pwd) 2>&1 | tee sanitizers_log.txt || true
          for i in {0..50}; do echo "" >> project_results.txt; done;
          for i in {0..50}; do echo "" >> run_results.txt; done;
          tail -n 300 sanitizers_log.txt >> project_results.txt
          cat results.txt >> run_results.txt


      - name: Run reproducer
        run: |
          echo "extends Node" > temp.txt
          echo "func _process(delta):" >> temp.txt
          if [ -f results.txt ]; then
            cat temp.txt results.txt > Node.gd.test || true
            VK_ICD_FILENAMES=$(pwd)/vk_swiftshader_icd.json UBSAN_OPTIONS=suppressions=suppressions.supp DRI_PRIME=0 timeout -v 3600 ./reproducer godot.x11.tools.64s 60_50 . --video-driver GLES3 --audio-driver Dummy # || echo "ERROR: REPRODUCER FAILURE"
          fi

      - name: Store reproducer
        uses: actions/upload-artifact@v3
        with:
          name: reproducer_3_x_gles3_1
          path: crash_reproduce.gd
          if-no-files-found: ignore

      - name: Configure Project Data
        run: |
          rm timer.txt || true
          rm memory_usage.txt || true
          rm results.txt || true
          rm crash_reproduce.gd || true
          echo "" > settings.txt
          cp project.godot.old project.godot

      - name: Execute project 2 GLES3
        run: |
          DRI_PRIME=0 xvfb-run ./godot.x11.tools.64s SingletonTesting.tscn 1000 --audio-driver Dummy --video-driver GLES3 --path $(pwd) 2>&1 | tee sanitizers_log.txt || true
          for i in {0..50}; do echo "" >> project_results.txt; done;
          for i in {0..50}; do echo "" >> run_results.txt; done;
          tail -n 300 sanitizers_log.txt >> project_results.txt
          cat results.txt >> run_results.txt

      - name: Run reproducer
        run: |
          echo "extends Node" > temp.txt
          echo "func _process(delta):" >> temp.txt
          if [ -f results.txt ]; then
            cat temp.txt results.txt > Node.gd.test || true
            VK_ICD_FILENAMES=$(pwd)/vk_swiftshader_icd.json UBSAN_OPTIONS=suppressions=suppressions.supp DRI_PRIME=0 timeout -v 3600 ./reproducer godot.x11.tools.64s 60_50 . --video-driver GLES3 --audio-driver Dummy # || echo "ERROR: REPRODUCER FAILURE"
          fi

      - name: Store reproducer
        uses: actions/upload-artifact@v3
        with:
          name: reproducer_3_x_gles3_2
          path: crash_reproduce.gd
          if-no-files-found: ignore

      - name: Configure Project Data
        run: |
          rm timer.txt || true
          rm memory_usage.txt || true
          rm results.txt || true
          rm crash_reproduce.gd || true
          echo "" > settings.txt
          cp project.godot.old project.godot

      - name: Execute project 3 GLES3
        run: |
          DRI_PRIME=0 xvfb-run ./godot.x11.tools.64s SingletonTesting.tscn 1000 --audio-driver Dummy --video-driver GLES3 --path $(pwd) 2>&1 | tee sanitizers_log.txt || true
          for i in {0..50}; do echo "" >> project_results.txt; done;
          for i in {0..50}; do echo "" >> run_results.txt; done;
          tail -n 300 sanitizers_log.txt >> project_results.txt
          cat results.txt >> run_results.txt

      - name: Run reproducer
        run: |
          echo "extends Node" > temp.txt
          echo "func _process(delta):" >> temp.txt
          if [ -f results.txt ]; then
            cat temp.txt results.txt > Node.gd.test || true
            VK_ICD_FILENAMES=$(pwd)/vk_swiftshader_icd.json UBSAN_OPTIONS=suppressions=suppressions.supp DRI_PRIME=0 timeout -v 3600 ./reproducer godot.x11.tools.64s 60_50 . --video-driver GLES3 --audio-driver Dummy # || echo "ERROR: REPRODUCER FAILURE"
          fi

      - name: Store reproducer
        uses: actions/upload-artifact@v3
        with:
          name: reproducer_3_x_gles3_3
          path: crash_reproduce.gd
          if-no-files-found: ignore

      - name: Store project results
        uses: actions/upload-artifact@v3
        with:
          name: project-results
          path: project_results.txt

      - name: Store test results
        uses: actions/upload-artifact@v3
        with:
          name: last-run-functions
          path: run_results.txt

      - name: Check Log
        run: |
          misc/check_ci_log.py project_results.txt
