name: 🐧 Godot 4 MANUAL
on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  linux-sanitizer:
    runs-on: "ubuntu-22.04"
    name: Editor and project

    steps:
      - uses: actions/checkout@v3

      # Azure repositories are not reliable, we need to prevent azure giving us packages.
      - name: Make apt sources.list use the default Ubuntu repositories
        run: |
          sudo rm -f /etc/apt/sources.list.d/*
          sudo cp -f misc/ci/sources.list /etc/apt/sources.list
          sudo apt-get update

      # Install all packages (except scons) - also installs updated mesa drivers
      - name: Configure dependencies
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EB8B81E14DA65431D7504EA8F63F0F2B90935439
          sudo add-apt-repository "deb https://ppa.launchpadcontent.net/kisak/turtle/ubuntu focal main"
          sudo apt update
          sudo apt-get install -qq mesa-vulkan-drivers

          sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev \
            libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev yasm \
            xvfb wget2 unzip scons git

      - name: Configure Data
        run: |
          true

      - name: Download Godot(GIT)
        run: |
          git clone https://github.com/godotengine/godot.git
          cd godot
          git checkout master
          cd ../

      - name: Compile Godot
        run: |
          cd godot
          scons -j2 target=editor dev_build=yes use_asan=yes use_ubsan=yes linker=gold
          cp bin/godot.linuxbsd.editor.dev.x86_64.san ../
          cd ../
          rm -rf godot

      - name: Download reproducer
        run: |
          wget -nv https://github.com/qarmin/Qarminer/releases/download/reproducer/find_minimal_godot_crash_02 -O reproducer
          chmod +x ./reproducer

      # Make backup of project.godot
      - name: Backup project.godot
        run: |
          cp project.godot project.godot.old


      - name: Configure Project Data
        run: |
          echo "" > settings.txt

          echo "disabled_classes_append:" >> settings.txt
          echo "Image" >> settings.txt

      - name: Create Project
        run: |
          DRI_PRIME=0 xvfb-run ./godot.linuxbsd.editor.dev.x86_64.san ManualTesting.tscn --headless || true

      - name: Configure Project Data
        run: |
          rm timer.txt || true
          rm memory_usage.txt || true
          rm results.txt || true
          rm crash_reproduce.gd || true
          rm CRASH_INFO -rf || true
          cp project.godot.old project.godot

      - name: Run project Vulkan
        run: |
          DRI_PRIME=0 xvfb-run ./godot.linuxbsd.editor.dev.x86_64.san SingletonTesting.tscn 1000 --path $(pwd) 2>&1 | tee sanitizers_log.txt || true
          tail -n 300 sanitizers_log.txt >> project_results.txt

      - name: Run reproducer
        run: |
          echo "extends Node" > temp.txt
          echo "func _process(delta):" >> temp.txt
          if [ -f results.txt ]; then
            cat temp.txt results.txt > Node.gd.test || true
            UBSAN_OPTIONS=suppressions=suppressions.supp DRI_PRIME=0 timeout -v 3600 ./reproducer godot.linuxbsd.editor.dev.x86_64.san 60_50 . --audio-driver Dummy # || echo "ERROR: REPRODUCER FAILURE"
          fi

      - name: Store reproducer
        uses: actions/upload-artifact@v3
        with:
          name: reproducer_4_vulkan_1
          path: crash_reproduce.gd
          if-no-files-found: ignore

      - name: Store report
        uses: actions/upload-artifact@v3
        with:
          name: report_reproducer_4_headless_normal_multithread_add_parent_maximum_tested_98
          path: CRASH_INFO
          if-no-files-found: ignore

      - name: Configure Project Data
        run: |
          rm timer.txt || true
          rm memory_usage.txt || true
          rm results.txt || true
          rm crash_reproduce.gd || true
          rm CRASH_INFO -rf || true
          cp project.godot.old project.godot

      - name: Run project GLES3
        run: |
          for i in {0..50}; do echo "" >> project_results.txt; done;
          DRI_PRIME=0 xvfb-run ./godot.linuxbsd.editor.dev.x86_64.san SingletonTesting.tscn 1000 --rendering-driver opengl3 --audio-driver Dummy  --path $(pwd) 2>&1 | tee sanitizers_log.txt || true
          tail -n 300 sanitizers_log.txt >> project_results.txt

      - name: Run reproducer
        run: |
          echo "extends Node" > temp.txt
          echo "func _process(delta):" >> temp.txt
          if [ -f results.txt ]; then
            cat temp.txt results.txt > Node.gd.test || true
            UBSAN_OPTIONS=suppressions=suppressions.supp DRI_PRIME=0 timeout -v 3600 ./reproducer godot.linuxbsd.editor.dev.x86_64.san 60_50 . --rendering-driver opengl3 --audio-driver Dummy # || echo "ERROR: REPRODUCER FAILURE"
          fi

      - name: Store reproducer
        uses: actions/upload-artifact@v3
        with:
          name: reproducer_4_gl3_1
          path: crash_reproduce.gd
          if-no-files-found: ignore

      - name: Store report
        uses: actions/upload-artifact@v3
        with:
          name: report_reproducer_4_headless_normal_multithread_add_parent_maximum_tested_98
          path: CRASH_INFO
          if-no-files-found: ignore

      - name: Configure Project Data
        run: |
          rm timer.txt || true
          rm memory_usage.txt || true
          rm results.txt || true
          rm crash_reproduce.gd || true
          rm CRASH_INFO -rf || true
          cp project.godot.old project.godot

      - name: Run project Headless
        run: |
          for i in {0..50}; do echo "" >> project_results.txt; done;
          DRI_PRIME=0 ./godot.linuxbsd.editor.dev.x86_64.san SingletonTesting.tscn 1000 --headless --path $(pwd) 2>&1 | tee sanitizers_log.txt || true
          tail -n 300 sanitizers_log.txt >> project_results.txt

      - name: Run reproducer
        run: |
          echo "extends Node" > temp.txt
          echo "func _process(delta):" >> temp.txt
          if [ -f results.txt ]; then
            cat temp.txt results.txt > Node.gd.test || true
            UBSAN_OPTIONS=suppressions=suppressions.supp DRI_PRIME=0 timeout -v 3600 ./reproducer godot.linuxbsd.editor.dev.x86_64.san 60_50 . --headless --audio-driver Dummy # || echo "ERROR: REPRODUCER FAILURE"
          fi

      - name: Store reproducer
        uses: actions/upload-artifact@v3
        with:
          name: reproducer_4_headless_1
          path: crash_reproduce.gd
          if-no-files-found: ignore

      - name: Store report
        uses: actions/upload-artifact@v3
        with:
          name: report_reproducer_4_headless_normal_multithread_add_parent_maximum_tested_98
          path: CRASH_INFO
          if-no-files-found: ignore

      - name: Configure Project Data
        run: |
          rm timer.txt || true
          rm memory_usage.txt || true
          rm results.txt || true
          rm crash_reproduce.gd || true
          rm CRASH_INFO -rf || true
          cp project.godot.old project.godot

      - name: Run project Vulkan Mobile
        run: |
          echo "echo "[rendering]" >> project.godot"
          echo "echo "vulkan/rendering/back_end=1" >> project.godot"
          for i in {0..50}; do echo "" >> project_results.txt; done;
          DRI_PRIME=0 xvfb-run ./godot.linuxbsd.editor.dev.x86_64.san SingletonTesting.tscn 1000 --path $(pwd) 2>&1 | tee sanitizers_log.txt || true
          tail -n 300 sanitizers_log.txt >> project_results.txt

      - name: Run reproducer
        run: |
          echo "extends Node" > temp.txt
          echo "func _process(delta):" >> temp.txt
          if [ -f results.txt ]; then
            cat temp.txt results.txt > Node.gd.test || true
            UBSAN_OPTIONS=suppressions=suppressions.supp DRI_PRIME=0 timeout -v 3600 ./reproducer godot.linuxbsd.editor.dev.x86_64.san 60_50 . --audio-driver Dummy # || echo "ERROR: REPRODUCER FAILURE"
          fi

      - name: Store reproducer
        uses: actions/upload-artifact@v3
        with:
          name: reproducer_4_mobile_1
          path: crash_reproduce.gd
          if-no-files-found: ignore

      - name: Store report
        uses: actions/upload-artifact@v3
        with:
          name: report_reproducer_4_headless_normal_multithread_add_parent_maximum_tested_98
          path: CRASH_INFO
          if-no-files-found: ignore

      - name: Store project results
        uses: actions/upload-artifact@v3
        with:
          name: project-results
          path: project_results.txt

      - name: Store test results
        uses: actions/upload-artifact@v3
        with:
          name: last-run-functions
          path: results.txt
          if-no-files-found: ignore

      - name: Store timer results
        uses: actions/upload-artifact@v3
        with:
          name: timer
          path: timer.txt
          if-no-files-found: ignore

      - name: Store memory usage results
        uses: actions/upload-artifact@v3
        with:
          name: memory-usage
          path: memory_usage.txt
          if-no-files-found: ignore

      - name: Check Log
        run: |
          misc/check_ci_log.py project_results.txt
